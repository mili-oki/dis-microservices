name: E2E - Docker Compose Smoke

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

permissions:
  contents: read

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-smoke:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images (compose)
        run: docker compose build

      - name: Start stack
        run: docker compose up -d

      - name: Wait for services (config, eureka, gateway)
        run: |
          set -e
          wait_up () { 
            url="$1"; name="$2"; 
            echo "Waiting for $name at $url";
            for i in {1..120}; do
              out=$(curl -fsS "$url" || true)
              echo "$out" | grep -q '"status":"UP"' && echo "$name is UP" && return 0
              sleep 2
            done
            echo "::error::$name not UP in time"; exit 1
          }
          wait_up "http://localhost:8888/actuator/health" "config-server"
          wait_up "http://localhost:8761/actuator/health" "discovery-service"
          wait_up "http://localhost:8080/actuator/health" "gateway"

      - name: Smoke routes via Gateway
        run: |
          set -e
          endpoints=(
            "auth-service/actuator/health"
            "catalog-service/actuator/health"
            "orders-service/actuator/health"
            "payments-service/actuator/health"
            "notifications-service/actuator/health"
          )
          for ep in "${endpoints[@]}"; do
            echo "GET /$ep"
            curl -fsS "http://localhost:8080/$ep" | tee /dev/stderr | grep -q '"status":"UP"'
          done

      - name: Dump logs on failure
        if: failure()
        run: docker compose logs --no-color > compose-logs.txt || true

      - name: Upload compose logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: compose-logs.txt
          if-no-files-found: ignore

      - name: Tear down
        if: always()
        run: docker compose down -v --remove-orphans
