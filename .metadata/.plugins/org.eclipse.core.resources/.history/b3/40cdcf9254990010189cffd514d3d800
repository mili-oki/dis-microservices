package com.example.dis.catalog_service;

import com.example.dis.catalog_service.model.Product;
import com.example.dis.catalog_service.repository.ProductRepository;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.boot.test.web.server.LocalServerPort;
import org.springframework.http.*;

import java.math.BigDecimal;

import static org.assertj.core.api.Assertions.assertThat;

@SpringBootTest(
    webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT,
    properties = { "spring.profiles.active=test" }
)
class CatalogApiTest {

    @LocalServerPort
    int port;

    @Autowired
    TestRestTemplate rest;

    @Autowired
    ProductRepository repo;

    @Test
    void getProducts_returns_200() {
        // seed (ako kontroler ƒçita iz baze)
        Product p = new Product();
        p.setName("Seed");
        p.setPrice(new BigDecimal("1.00"));
        repo.save(p);

        String base = "http://localhost:" + port;
        ResponseEntity<String> res = rest.getForEntity(base + "/products", String.class);
        assertThat(res.getStatusCode()).isEqualTo(HttpStatus.OK);
    }

    @Test
    void createProduct_returns_201() {
        String base = "http://localhost:" + port;
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        String body = """
          {"name":"New","price":9.99}
        """;

        ResponseEntity<String> res = rest.postForEntity(
            base + "/products",
            new HttpEntity<>(body, headers),
            String.class
        );

        assertThat(res.getStatusCode()).isEqualTo(HttpStatus.CREATED);
    }
}
